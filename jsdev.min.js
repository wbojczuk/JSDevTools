"use strict";var jsdev={isElement:e=>{function t(e){if(e instanceof Node||e instanceof NodeList||e instanceof HTMLElement||e instanceof HTMLCollection)return!0}let r=!1;return t(e)?r=!0:Array.isArray(e)&&t(e[0])&&(r=!0),r},isObject:e=>"[object Object]"==Object.prototype.toString.call(e),getElementRefs:(e,t)=>{const r={container:document,multiple:!0,...t};return"string"==typeof e?1==r.multiple?r.container.querySelectorAll(e):r.container.querySelector(e):jsdev.isElement(e)&&(e instanceof NodeList||Array.isArray(e))?1==r.multiple?e:e[0]:jsdev.isElement(e)?1==r.multiple?[e]:e:void 0},randInt:(e,t)=>Math.floor(Math.random()*(t+1-e)+e),randFloat:(e,t)=>Math.random()*(t-e)+e,postFormData:e=>{const t={POST:[],GET:[],action:"",...e},r=document.createElement("form");r.method="POST";const n=t.POST.length,a=document.createElement("input");for(let e=0;e<n;++e){const n=a.cloneNode(!1);n.name=t.POST[e].name,n.value=t.POST[e].value,r.append(n)}let s="",o=t.GET.length;for(let e=0;e<o;e++)0==e&&(s+="?"),s+=e>0?`&${t.GET[e].name}=${t.GET[e].value}`:`${t.GET[e].name}=${t.GET[e].value}`;r.action=`${t.action}${s}`,document.getElementsByTagName("body")[0].append(r),r.submit()},unsavedChanges:{unSavedChanges:!1,elemRefs:[],setUnsaved:()=>{jsdev.unsavedChanges.unSavedChanges=!0},listen:e=>{const t={containers:"body",inputTypes:"input:not([type='submit']):not([type='reset']):not([disabled]), textarea:not([disabled])",...e};window.addEventListener("beforeunload",jsdev.unsavedChanges.checkSaved),jsdev.getElementRefs(t.containers,{multiple:!0}).forEach(e=>{jsdev.getElementRefs(t.inputTypes,{container:e,multiple:!0}).forEach(e=>{e.addEventListener("input",jsdev.unsavedChanges.setUnsaved),jsdev.unsavedChanges.elemRefs.push(e)})})},checkSaved:e=>{if(jsdev.unsavedChanges.unSavedChanges)return e.preventDefault(),e.returnValue="There are unsaved changes on this page, are you sure you want to exit?","There are unsaved changes on this page, are you sure you want to exit?"},destroy:()=>{window.removeEventListener("beforeunload",jsdev.unsavedChanges.checkSaved),jsdev.unsavedChanges.unSavedChanges=!1,jsdev.unsavedChanges.elemRefs.forEach(e=>{e.removeEventListener("input",jsdev.unsavedChanges.setUnsaved)}),jsdev.unsavedChanges.elemRefs.length=0}},intersectionTrigger:(e,t)=>{const r={thresholdIn:.5,thresholdOut:.1,repeat:!0,container:null,onTrigger:()=>{},onExit:()=>{},...t},n=new IntersectionObserver(e=>{e.forEach(e=>{e.isIntersecting&&"false"==e.target.dataset.is_triggered&&(e.target.setAttribute("data-is_triggered","true"),r.onTrigger(e.target))})},{threshold:r.thresholdIn});if(null!=r.thresholdOut){const t=new IntersectionObserver(e=>{e.forEach(e=>{e.isIntersecting||("true"==e.target.dataset.is_triggered&&(e.target.setAttribute("data-is_triggered","false"),r.onExit(e.target)),r.repeat||(t.unobserve(e.target),n.unobserve(e.target)))})},{threshold:r.thresholdOut});jsdev.getElementRefs(e,{multiple:!0}).forEach(e=>{t.observe(e)})}jsdev.getElementRefs(e,{multiple:!0}).forEach(e=>{e.setAttribute("data-is_triggered","false"),n.observe(e)})},lazyLoad:(e,t)=>{const r={threshold:.1,tempSrcAttribute:"data-src",targetSrcAttribute:"src",checkImages:!0,container:null,onLoad:()=>{},onError:()=>{},...t},n=new IntersectionObserver(e=>{e.forEach(e=>{if(e.isIntersecting)if(n.unobserve(e.target),r.checkImages){const t=new Image;t.src=e.target.getAttribute(r.tempSrcAttribute),t.complete?(e.target.setAttribute(r.targetSrcAttribute,e.target.getAttribute(r.tempSrcAttribute)),r.onLoad(e.target)):(t.onload=(()=>{e.target.setAttribute(r.targetSrcAttribute,e.target.getAttribute(r.tempSrcAttribute)),r.onLoad(e.target)}),t.onerror=(()=>{r.onError(e.target)}))}else e.target.setAttribute(r.targetSrcAttribute,e.target.getAttribute(r.tempSrcAttribute)),e.target.onload=(()=>{r.onLoad(e.target)})})},{threshold:r.threshold,root:null==r.container?null:jsdev.getElementRefs(r.container,{multiple:!1})});jsdev.getElementRefs(e,{multiple:!0}).forEach(e=>{n.observe(e)})},getUUID:()=>([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,e=>(e^crypto.getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16)),GETValues:()=>{const e=new URLSearchParams(window.location.search),t={};for(const r of e.keys())t[r]=e.get(r);return t},elemStyles:function(e,t){const r=t.split(";");r.pop();const n=[];r.forEach(e=>{const t=e.split(":");if(/-/gi.test(t[0])){const e=t[0].split("-");let r=e[1].slice(1);t[0]=e[0]+e[1].charAt(0).toUpperCase()+r}n[n.length]=[t[0].trim(),t[1].trim()]}),n.forEach(t=>{e.style[t[0]]=t[1]})},wordCount:function(e){return/[0-9a-z]{1,}/gi.test(e)?e.match(/[0-9a-z]{1,}/gi).length:0},wordsToUpperCase:function(e){return e.replace(/[a-z]{1,}(?!\w)/gi,e=>{let t=e.slice(1),r=e.charAt(0).toUpperCase();return r+t})},sortRandom:function(e){const t=e.length,r=[],n=[];for(let e=0;e<t;e++)r.push(e);for(let a=0;a<t;a++){const t=Math.floor(Math.random()*(r.length-0)+0);n.push(e[r[t]]),r.splice(t,1)}return n}};